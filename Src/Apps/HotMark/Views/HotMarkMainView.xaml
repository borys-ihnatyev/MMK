<wpf:TrayWindow x:Class="MMK.HotMark.Views.HotMarkMainView"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                xmlns:wpf="clr-namespace:MMK.Presentation;assembly=MMK.Presentation"
                xmlns:views="clr-namespace:MMK.HotMark.Views"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:system="clr-namespace:System;assembly=mscorlib"
                xmlns:tools="clr-namespace:MMK.Presentation.Tools;assembly=MMK.Presentation"
                xmlns:s="clr-namespace:MMK.PresentationStyles;assembly=MMK.PresentationStyles"
                mc:Ignorable="d"
                AllowsTransparency="True"
                WindowStartupLocation="CenterScreen"
                SizeToContent="WidthAndHeight"
                MinWidth="400"
                Topmost="True"
                WindowStyle="None"
                FontFamily="Consolas"
                Foreground="White"
                d:DataContext="{d:DesignData Source=../DesignData/HotMarkViewModel.xaml}">

    <Window.Background>
        <SolidColorBrush x:Name="BackgroundBrush" Opacity="0.9" Color="#111" />
    </Window.Background>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Style/Style.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <system:Boolean x:Key="True">True</system:Boolean>
            <system:Boolean x:Key="False">False</system:Boolean>

            <tools:KeyBrushConverter x:Key="KeyColorConverter" DefaultBrush="White" />

            <Storyboard x:Key="HideStoryboard">
                <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0" />
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Hidden}" />
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="ShowStoryboard">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>

                <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1" />
            </Storyboard>

        </ResourceDictionary>
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="KeyDown">
            <tools:InvokeDelegateCommandAction
                Command="{Binding KeyDownCommand}"
                CommandParameter="{Binding InvokeParameter, RelativeSource={RelativeSource Self}}" />
        </i:EventTrigger>

        <i:EventTrigger EventName="KeyUp">
            <tools:InvokeDelegateCommandAction
                Command="{Binding KeyUpCommand}"
                CommandParameter="{Binding InvokeParameter, RelativeSource={RelativeSource Self}}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.CommandBindings>
        <CommandBinding Command="Close" Executed="OnCloseCommandExecuted" />
    </Window.CommandBindings>

    <Window.InputBindings>

        <KeyBinding Key="Escape" Command="Close" CommandParameter="{StaticResource False}" />
        <KeyBinding Key="Enter" Modifiers="Control" Command="Close" CommandParameter="{StaticResource True}" />

        <KeyBinding Key="P" Modifiers="Control" Command="{Binding ChangeLayoutCommand}" />

        <KeyBinding Key="N" Modifiers="Control+Shift" Command="{Binding HashTags.AddNewCommand}" />
        <KeyBinding Key="Right" Modifiers="Control+Alt" Command="{Binding HashTags.SelectNextCommand}" />
        <KeyBinding Key="Left" Modifiers="Control+Alt" Command="{Binding HashTags.SelectPreviousCommand}" />

        <KeyBinding Key="Right" Modifiers="Alt" Command="{Binding PlayerViewModel.PositionIncreaseCommand}" />
        <KeyBinding Key="Left" Modifiers="Alt" Command="{Binding PlayerViewModel.PositionDecreaseCommand}" />

        <KeyBinding Key="Up" Modifiers="Alt" Command="{Binding PlayerViewModel.VolumeIncreaseCommand}" />
        <KeyBinding Key="Down" Modifiers="Alt" Command="{Binding PlayerViewModel.VolumeDecreaseCommand}" />

    </Window.InputBindings>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" x:Name="HashTagEditContainer">
            <DockPanel.Style>
                <Style TargetType="{x:Type DockPanel}">
                    <Style.Setters>
                        <Setter Property="HorizontalAlignment" Value="Center" />
                    </Style.Setters>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPianoKeyboardLayout}" Value="true">
                            <DataTrigger.Setters>
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger.Setters>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DockPanel.Style>

            <Label Style="{StaticResource HashTagEditRegionStyle}"
                   Foreground="#777"
                   FontFamily="pack://application:,,,/MMK.PresentationStyles;component/fonts/#FontAwesome"
                   Content="&#xf02b;" />

            <TextBox x:Name="HashTagEditBox"
                     Style="{StaticResource HashTagEditTextBoxStyle}"
                     IsEnabled="{Binding CanDirectEditHashTags}"
                     Foreground="{Binding HashTags.Selected.HashTag, Converter={StaticResource KeyColorConverter}}"
                     Text="{Binding HashTags.Selected.HashTagValue, UpdateSourceTrigger=PropertyChanged}" />
        </DockPanel>

        <WrapPanel Grid.Row="0"
                   x:Name="PianoKeyBoardEditContainer"
                   Height="50">
            <WrapPanel.Style>
                <Style TargetType="{x:Type WrapPanel}">
                    <Style.Setters>
                        <Setter Property="Opacity" Value="0" />
                        <Setter Property="Visibility" Value="Hidden" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                    </Style.Setters>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPianoKeyboardLayout}" Value="true">
                            <DataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger.Setters>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </WrapPanel.Style>

            <views:PianoKeyBoardControl Height="50"
                                        DataContext="{Binding PianoKeyBoardViewModel}" />
        </WrapPanel>

        <DockPanel Grid.Row="1" HorizontalAlignment="Center" Height="22">
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                TextAlignment="Center"
                FontSize="13"
                Text="{Binding FileItemView}" />

            <ItemsControl ItemsSource="{Binding HashTags}"
                          Background="Transparent"
                          ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                          ScrollViewer.VerticalScrollBarVisibility="Hidden"
                          IsTabStop="False">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border Height="22" Margin="0,0,5,0" CornerRadius="11">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="Background" Value="#5a47ff" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction
                                        Command="{Binding DataContext.HashTags.SelectCommand, 
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                        CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            
                            <DockPanel VerticalAlignment="Center">
                                <Label Content="&#xf02b;"
                                       FontFamily="pack://application:,,,/MMK.PresentationStyles;component/fonts/#FontAwesome"
                                       FontSize="13"
                                       Foreground="{Binding HashTag, Converter={StaticResource KeyColorConverter}}"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center"
                                       Padding="0"
                                       Margin="6,0,2,0" />

                                <TextBlock Text="{Binding HashTagValue}"
                                           Foreground="{Binding HashTag, Converter={StaticResource KeyColorConverter}}"
                                           Margin="0"
                                           Padding="2"
                                           Style="{StaticResource ClearTextBlockStyle}"
                                           HorizontalAlignment="Center"/>
                                <Button
                                    Command="{Binding DataContext.HashTags.RemoveCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                    CommandParameter="{Binding}"
                                    Style="{StaticResource RemoveButtonStyle}" />
                            </DockPanel>
                        </Border>
                    </DataTemplate>

                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <Button Command="{Binding HashTags.AddNewCommand}"
                    Style="{StaticResource TagButtonStyle}"/>
        </DockPanel>

        <views:PlayerControl Grid.Row="2"
                             DataContext="{Binding PlayerViewModel}">
            <views:PlayerControl.Style>
                <Style TargetType="{x:Type views:PlayerControl}">

                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding}" Value="{x:Null}">
                            <DataTrigger.Setters>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </views:PlayerControl.Style>
        </views:PlayerControl>
    </Grid>
</wpf:TrayWindow>